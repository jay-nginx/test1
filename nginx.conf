user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;
events {
    worker_connections 1024;
}
http {
    types {
        text/html html htm shtml;
        text/css css;
        text/xml xml;
        image/gif gif;
        image/jpeg jpeg jpg;

    }
    map_hash_bucket_size 512;
    underscores_in_headers on;
    default_type application/octet-stream;
    log_format main '$remote_addr - "$api_client_name" [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" $apimgmt_environment $apimgmt_definition $apimgmt_entry_point "$apimgmt_environment_name" "$apimgmt_definition_name" $jwt_claim_sub';
    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;
    map $host $api_client_name {
        default -;
    }
    map $host $apimgmt_entry_point {
        default -;
    }
    map $host $apimgmt_environment {
        default -;
    }
    map $host $apimgmt_environment_name {
        default -;
    }
    map $host $apimgmt_definition {
        default -;
    }
    map $host $apimgmt_definition_name {
        default -;
    }
    map $request_uri $request_uri_path {
        '~^(?P<path>[^?]*)(\?.*)?$' $path;
    }

    #Rate Limit
    #limit_req_zone $binary_remote_addr zone=rate_limit_environment_13_iqwee105n:10m rate=10r/m;


    upstream 'ANZ Cloud' {
        zone 'ANZ Cloud' 256k;
        server ubuntu-apigw1.com:80;
    }
    server {
        listen 80;
        server_name ubuntu-apigw1.com;
        status_zone ubuntu-apigw1.com;
        set $apimgmt_entry_point 11;
        location @400 {
            return 400 '{"status":400,"message":"Bad Request"}\n';
        }
        location @401 {
            return 401 '{"status":401,"message":"Unauthorized"}\n';
        }

        error_page 400 = @400;
        error_page 401 = @401;

        location /api/f1/constructors {
            set $apimgmt_environment 12;
            set $apimgmt_definition 9;
            set $upstream 'ANZ Cloud';
            set $upstream_protocol http;
            rewrite ^ /_anz_cloud_prod_12 last;
        }
        location /api/f1/seasons {
            set $apimgmt_environment 12;
            set $apimgmt_definition 9;
            set $upstream 'ANZ Cloud';
            set $upstream_protocol http;
            rewrite ^ /_anz_cloud_prod_12 last;
        }
        #location /api/f1/drivers {
        #    set $apimgmt_environment 13;
        #    set $apimgmt_definition 9;
        #    set $upstream 'ANZ Cloud';
        #    set $upstream_protocol http;
        #    rewrite ^ /_anz_cloud_test_13 last;
        #}
        location /api/f1/circuits {
            set $apimgmt_environment 12;
            set $apimgmt_definition 9;
            set $upstream 'ANZ Cloud';
            set $upstream_protocol http;
            rewrite ^ /_anz_cloud_prod_12 last;
        }
        location / {
            return 404;
        }
        location = /_anz_cloud_test_13 {
            internal;
            set $apimgmt_definition_name 'ANZ Cloud API';
            set $apimgmt_environment_name 'ANZ Cloud TEST';
            #limit_req zone=rate_limit_environment_13_iqwee105n nodelay;
            #limit_req_status 429;
            #auth_jwt '';
            #auth_jwt_key_file /etc/controller-agent/configurator/auxfiles/api_secret_jwt.jwk;
            proxy_intercept_errors on;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
            proxy_pass $upstream_protocol://$upstream$request_uri;
        }
        location = /_anz_cloud_prod_12 {
            internal;
            set $apimgmt_definition_name 'ANZ Cloud API';
            set $apimgmt_environment_name 'ANZ Cloud PROD';
            proxy_intercept_errors on;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
            proxy_pass $upstream_protocol://$upstream$request_uri;
        }
        default_type application/json;
    }
    server {
        server_name 127.0.0.1;
        listen 127.0.0.1:49151;
        set $apimgmt_entry_point -;
        access_log off;
        location /api {
            api;
        }
    }
}
